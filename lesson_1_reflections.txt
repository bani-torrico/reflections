How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Because it gave me a visual way to find the difference. I was able to spot the difference just scanning the code. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I will be able to understand better the evolution of the code through time.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    I can deliberated choose when I finished doing significative alterations to the file. When it's saved automatically every new word or small sentence becomes a new version, not necessarily a new full idea.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because in a repository some changes can have impact um multiple files.

How can you use the commands git log and git diff to view the history of files?

    Using this commands I can see the differences between two commits. The changes are highlited, so I can just scan the file to find the differences.

How might using version control make you more confident to make changes that
could break something?

    Because I have a giant UNDO button. If something goes wrong I can just return the project to the last version.

Now that you have your workspace set up, what do you want to try using Git for?

    For my feminazi projects!